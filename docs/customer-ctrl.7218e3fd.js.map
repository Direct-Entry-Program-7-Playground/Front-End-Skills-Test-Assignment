{"version":3,"sources":["js/customer-ctrl.js"],"names":["$","window","on","regexpCustomerId","regexpCustomerName","regexpCustomerAddress","e","customerIdInput","val","customerNameInput","customerAddressInput","test","markInvalid","markValid","filter","length","toArray","focus","preventSubmit","addCustomer","clearInputFields","inputValue","target","trimedValue","trim","preventDefault","stopPropagation","field","addClass","removeClass","id","name","address","append","hideTableFooter","checkPaginationState","removeCustomer","showTableFooter","hide","show","hidePagination","parent","showPagination","tableBottomPoint","offset","top","outerHeight","height"],"mappings":";AAAA,aAKAA,EAAEC,QAAQC,GAAG,OAAQ,WACbC,IAAAA,EAAmB,cACnBC,EAAqB,sBACrBC,EAAwB,sBACjBL,EAAE,iBACRE,GAAG,SAAU,SAACI,GACXC,IAAAA,EAAkBP,EAAE,WAAWQ,MAC/BC,EAAoBT,EAAE,aAAaQ,MACnCE,EAAuBV,EAAE,gBAAgBQ,MAEC,GAA1CL,EAAiBQ,KAAKJ,GACtBK,EAAYZ,EAAE,YAGda,EAAUb,EAAE,YAEkC,GAA9CI,EAAmBO,KAAKF,GACxBG,EAAYZ,EAAE,cAGda,EAAUb,EAAE,cAEwC,GAApDK,EAAsBM,KAAKD,GAC3BE,EAAYZ,EAAE,iBAGda,EAAUb,EAAE,iBAGuC,GAAnDA,EAAE,iBAAiBc,OAAO,eAAeC,QACzCf,EAAE,oBAAoBgB,UAAU,GAAGC,QACnCC,EAAcZ,KAGda,EAAYZ,EAAiBE,EAAmBC,GAChDU,SAKZpB,EAAE,sBAAsBE,GAAG,WAAY,SAACI,GAChCe,IAAAA,EAAarB,EAAEM,EAAEgB,QAAQd,MACzBe,EAAcvB,EAAEwB,KAAKH,GACzBrB,EAAEM,EAAEgB,QAAQd,IAAIe,KAEpB,IAAIL,EAAgB,SAACZ,GACjBA,EAAEmB,iBACFnB,EAAEoB,mBAGFd,EAAc,SAACe,GACfA,EAAMC,SAAS,cACfD,EAAME,YAAY,aAGlBhB,EAAY,SAACc,GACbA,EAAMC,SAAS,YACfD,EAAME,YAAY,eAGlBT,EAAmB,WAEnBpB,EAAE,SAAS6B,YAAY,YACvB7B,EAAE,WAAWiB,SAGbE,EAAc,SAACW,EAAIC,EAAMC,GACzBhC,EAAE,wBAAwBiC,OACZH,yBAAAA,OAAAA,EACAC,2BAAAA,OAAAA,EACAC,2BAAAA,OAAAA,EAHd,4HAQAE,IACAC,KAGAC,EAAiB,WACjBC,IACAF,KAGAD,EAAkB,WACdlC,EAAE,2BAA2Be,OAAS,GACtCf,EAAE,wBAAwBsC,QAI9BD,EAAkB,YACbrC,EAAE,2BAA2Be,OAAS,IACvCf,EAAE,wBAAwBuC,QAI9BC,EAAiB,WACjBxC,EAAE,eAAeyC,SAASH,QAG1BI,EAAiB,WACjB1C,EAAE,eAAeyC,SAASF,QAG1BJ,EAAuB,WACnBQ,IAAAA,EAAmB3C,EAAE,SAAS4C,SAASC,IAAM7C,EAAE,SAAS8C,cACvC9C,EAAE,UAAU4C,SAASC,IAErBF,GADE3C,EAAE,eAAeyC,SAASM,SACW,IACxDL,IAGAF,KAGRxC,EAAEC,QAAQC,GAAG,cAAe,WACxBiC","file":"customer-ctrl.7218e3fd.js","sourceRoot":"..","sourcesContent":["\"use strict\";\n// focus customer ID input field on start\n/* $(() => {\n  $(\"#txt-id\").focus();\n}); */\n$(window).on(\"load\", () => {\n    let regexpCustomerId = /^C[0-9]{3}$/;\n    let regexpCustomerName = /^([A-Za-z. ]{3,})+$/;\n    let regexpCustomerAddress = /^[A-Za-z .0-9]{3,}$/;\n    let form = $(\"#frm-customer\");\n    form.on(\"submit\", (e) => {\n        let customerIdInput = $(\"#txt-id\").val();\n        let customerNameInput = $(\"#txt-name\").val();\n        let customerAddressInput = $(\"#txt-address\").val();\n        // check input for validation\n        if (regexpCustomerId.test(customerIdInput) == false) {\n            markInvalid($(\"#txt-id\"));\n        }\n        else {\n            markValid($(\"#txt-id\"));\n        }\n        if (regexpCustomerName.test(customerNameInput) == false) {\n            markInvalid($(\"#txt-name\"));\n        }\n        else {\n            markValid($(\"#txt-name\"));\n        }\n        if (regexpCustomerAddress.test(customerAddressInput) == false) {\n            markInvalid($(\"#txt-address\"));\n        }\n        else {\n            markValid($(\"#txt-address\"));\n        }\n        // prevent event propergation if any filed is invalid\n        if ($(\".form-control\").filter(\".is-invalid\").length != 0) {\n            $(\"input.is-invalid\").toArray()[0].focus();\n            preventSubmit(e);\n        }\n        else {\n            addCustomer(customerIdInput, customerNameInput, customerAddressInput);\n            clearInputFields();\n        }\n    });\n});\n// trim text of input field on focusout\n$(\"input.form-control\").on(\"focusout\", (e) => {\n    let inputValue = $(e.target).val();\n    let trimedValue = $.trim(inputValue);\n    $(e.target).val(trimedValue);\n});\nlet preventSubmit = (e) => {\n    e.preventDefault();\n    e.stopPropagation();\n};\n// mark form fields as invalid\nlet markInvalid = (field) => {\n    field.addClass(\"is-invalid\");\n    field.removeClass(\"is-valid\");\n};\n// mark form fields as valid\nlet markValid = (field) => {\n    field.addClass(\"is-valid\");\n    field.removeClass(\"is-invalid\");\n};\n// clear input fields on data submit\nlet clearInputFields = () => {\n    //   $(\"input\").val(\"\");\n    $(\"input\").removeClass(\"is-valid\");\n    $(\"#txt-id\").focus();\n};\n// add customer data to table\nlet addCustomer = (id, name, address) => {\n    $(\"#tbl-customers>tbody\").append(`<tr>\n            <td>${id}</td>\n            <td>${name}</td>\n            <td>${address}</td>\n            <td><img src=\"./img/trash.png\" alt=\"trash\" class=\"del-btn\"/></td>\n            \n      </tr>\n      `);\n    hideTableFooter();\n    checkPaginationState();\n};\n// remove customer data from table\nlet removeCustomer = () => {\n    showTableFooter();\n    checkPaginationState();\n};\n// hide table footer if there are data in the table\nlet hideTableFooter = () => {\n    if ($(\"#tbl-customers>tbody>tr\").length > 0) {\n        $(\"#tbl-customers>tfoot\").hide();\n    }\n};\n// show table footer if there are no data in the table\nlet showTableFooter = () => {\n    if (($(\"#tbl-customers>tbody>tr\").length = 0)) {\n        $(\"#tbl-customers>tfoot\").show();\n    }\n};\n// hide pagination\nlet hidePagination = () => {\n    $(\".pagination\").parent().hide();\n};\n// show pagination\nlet showPagination = () => {\n    $(\".pagination\").parent().show();\n};\n// pagination visibility condition check\nlet checkPaginationState = () => {\n    let tableBottomPoint = $(\"table\").offset().top + $(\"table\").outerHeight();\n    let footerTopPoint = $(\"footer\").offset().top;\n    let paginationHeight = $(\".pagination\").parent().height();\n    if (footerTopPoint - tableBottomPoint <= paginationHeight + 100) {\n        showPagination();\n    }\n    else {\n        hidePagination();\n    }\n};\n$(window).on(\"resize load\", () => {\n    checkPaginationState();\n});\n// highlight active page on pagination\n// enable/ disable forward and backward button of the pagination\n// add new page to pagination\n// remove page from pagination\n"]}